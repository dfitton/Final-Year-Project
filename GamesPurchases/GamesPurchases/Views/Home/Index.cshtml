@using System.Globalization

<style>
    .pc {
        color: dimgrey;
    }

    .ps4 {
        color: darkslateblue;
    }

    .xbox {
        color: darkgreen;
    }

    .switch {
        color: darkred;
    }

    .mobile {
        color: darkorange;
    }

    .other {
        color: darkgray;
    }
</style>


@{
    ViewData["Title"] = "Home Page";

    //Global Stats
    int purchaseCount = 0;
    double totalSpend = 0;
    double avgSpend = 0;

    int preorderCount = 0;
    double preorderPerc = 0;
    double avgSaving = 0;

    int pcCount = 0;
    int ps4Count = 0;
    int xboxCount = 0;
    int switchCount = 0;
    int mobileCount = 0;
    int otherCount = 0;

    double pcSpend = 0;
    double ps4Spend = 0;
    double xboxSpend = 0;
    double switchSpend = 0;
    double mobileSpend = 0;
    double otherSpend = 0;

    double pcAvg = 0;
    double ps4Avg = 0;
    double xboxAvg = 0;
    double switchAvg = 0;
    double mobileAvg = 0;
    double otherAvg = 0;

    int janCount = 0;
    int febCount = 0;
    int marCount = 0;
    int aprCount = 0;
    int mayCount = 0;
    int junCount = 0;
    int julCount = 0;
    int augCount = 0;
    int sepCount = 0;
    int octCount = 0;
    int novCount = 0;
    int decCount = 0;

    double totalSaving = 0;
    int savingCount = 0;

    foreach (Purchase p in ViewBag.Purchases)
    {
        purchaseCount++;
        totalSpend += p.PurchaseCost;
        if (p.PurchaseCost > 0)
        {
            avgSpend += p.PurchaseCost;
        }
        foreach (Game g in ViewBag.Games)
        {
            if (g.GameID == p.PurchaseGame)
            {
                switch (g.GamePlatform)
                {
                    case Game.EnumPlatform.PC:
                        pcCount++;
                        pcSpend += p.PurchaseCost;
                        break;
                    case Game.EnumPlatform.PS4:
                        ps4Count++;
                        ps4Spend += p.PurchaseCost;
                        break;
                    case Game.EnumPlatform.XboxOne:
                        xboxCount++;
                        xboxSpend += p.PurchaseCost;
                        break;
                    case Game.EnumPlatform.Switch:
                        switchCount++;
                        switchSpend += p.PurchaseCost;
                        break;
                    case Game.EnumPlatform.Mobile:
                        mobileCount++;
                        mobileSpend += p.PurchaseCost;
                        break;
                    case Game.EnumPlatform.Other:
                        otherCount++;
                        otherSpend += p.PurchaseCost;
                        break;
                    default:
                        break;
                }
                int i = DateTime.Compare(g.GameRelease, p.PurchaseDate);
                if (i > 0)
                {
                    preorderCount++;
                }
                if (g.GameRRP > p.PurchaseCost)
                {
                    savingCount++;
                    totalSaving += (g.GameRRP - p.PurchaseCost);
                }
                switch (p.PurchaseDate.Month)
                {
                    case 1:
                        janCount++;
                        break;
                    case 2:
                        febCount++;
                        break;
                    case 3:
                        marCount++;
                        break;
                    case 4:
                        aprCount++;
                        break;
                    case 5:
                        mayCount++;
                        break;
                    case 6:
                        junCount++;
                        break;
                    case 7:
                        julCount++;
                        break;
                    case 8:
                        augCount++;
                        break;
                    case 9:
                        sepCount++;
                        break;
                    case 10:
                        octCount++;
                        break;
                    case 11:
                        novCount++;
                        break;
                    case 12:
                        decCount++;
                        break;
                }
            }
        }
    }

    avgSpend = avgSpend / purchaseCount;

    if (pcCount > 0)
    {
        pcAvg = pcSpend / (double)pcCount;
    }
    if (ps4Count > 0)
    {
        ps4Avg = ps4Spend / (double)ps4Count;
    }
    if (xboxCount > 0)
    {
        xboxAvg = xboxSpend / (double)xboxCount;
    }
    if (switchCount > 0)
    {
        switchAvg = switchSpend / (double)switchCount;
    }
    if (mobileCount > 0)
    {
        mobileAvg = mobileSpend / (double)mobileCount;
    }
    if (otherCount > 0)
    {
        otherAvg = otherSpend / (double)otherCount;
    }

    if (preorderCount > 0)
    {
        preorderPerc = ((double)preorderCount / (double)purchaseCount) * 100;
    }


}
<br />

<head>
    <script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
    <script type="text/javascript">

        window.onload = function () {
            CanvasJS.addColorSet("CustomColors",
                [//colorSet Array

                    "dimgrey",
                    "darkslateblue",
                    "darkgreen",
                    "darkred",
                    "darkorange",
                    "darkgray"
                ]);

            // Total Purchases Pie chart
            var chart = new CanvasJS.Chart("piePurchaseTotal", {

                colorSet: "CustomColors",

                title: {
                    fontFamily: "Arial",
                    text: "Global Purchase Totals"
                },
                data: [
                    {
                        
                        type: "pie",
                        toolTipContent: "{y} - #percent %",
                        dataPoints: [
                            { label: "PC", y: @pcCount },
                            { label: "PS4", y: @ps4Count },
                            { label: "Xbox One", y: @xboxCount },
                            { label: "Switch", y: @switchCount },
                            { label: "Mobile", y: @mobileCount },
                            { label: "Other", y: @otherCount}
                        ]
                    }
                ]
            });
            chart.render();

            //Total Spent Columm Chart
            var chart = new CanvasJS.Chart("colSpendTotal", {

                colorSet: "CustomColors",

                title: {
                    fontFamily: "Arial",
                    text: "Global Spending Totals"
                },
                axisY: {
                    prefix: "£"
                },
                data: [
                    {
                        type: "column",
                        toolTipContent: "{label} - £{y}",
                        dataPoints: [
                            { x: 1, y: @pcSpend, label: "PC"},
                            { x: 2, y: @ps4Spend, label: "PS4"},
                            { x: 3, y: @xboxSpend, label: "Xbox One"},
                            { x: 4, y: @switchSpend, label: "Switch"},
                            { x: 5, y: @mobileSpend, label: "Mobile"},
                            { x: 6, y: @otherSpend, label: "Other"}
                        ]
                    }
                ]
            });
            chart.render();

            //Average spend column chart
            var chart = new CanvasJS.Chart("colAvgTotal", {

                colorSet: "CustomColors",

                title: {
                    fontFamily: "Arial",
                    text: "Global Average Totals"
                },
                axisY: {
                    prefix: "£",
                },
                axisX: {
                    ValueFormatString: "#,###,.##",
                },
                data: [
                    {                      
                        type: "column",
                        toolTipContent: "{label} - £{y}",
                        dataPoints: [
                            { x: 1, y: @pcAvg, label: "PC"},
                            { x: 2, y: @ps4Avg, label: "PS4"},
                            { x: 3, y: @xboxAvg, label: "Xbox One"},
                            { x: 4, y: @switchAvg, label: "Switch"},
                            { x: 5, y: @mobileAvg, label: "Mobile"},
                            { x: 6, y: @otherAvg, label: "Other"}
                        ]
                    }
                ]
            });
            chart.render();

            //Purchase per month Count chart
            var chart = new CanvasJS.Chart("areaMonthCount", {
    
                title: {
                    fontFamily: "Arial",
                    text: "Purchases made per month"
                },     
                axisX: {
                    valueFormatString: "MMM",
                    interval: 1,
                    IntervalType: "month"
                },
                data: [
                    {                      
                        type: "area",
                        toolTipContent: "{y}",
                        dataPoints: [
                            { x: new Date(2019, 00, 00), y: @janCount},
                            { x: new Date(2019, 01, 00), y: @febCount},
                            { x: new Date(2019, 02, 00), y: @marCount},
                            { x: new Date(2019, 03, 00), y: @aprCount},
                            { x: new Date(2019, 04, 00), y: @mayCount},
                            { x: new Date(2019, 05, 00), y: @junCount},
                            { x: new Date(2019, 06, 00), y: @julCount},
                            { x: new Date(2019, 07, 00), y: @augCount},
                            { x: new Date(2019, 08, 00), y: @sepCount},
                            { x: new Date(2019, 09, 00), y: @octCount},
                            { x: new Date(2019, 10, 00), y: @novCount},
                            { x: new Date(2019, 11, 00), y: @decCount},
                        ]
                    }
                ]
            });
            chart.render();

        }


        function chartPick() {
            //set all charts visibility to none
            document.getElementById('piePurchaseDD').style.display = "none";
            document.getElementById('colSpendDD').style.display = "none";
            document.getElementById('colAvgDD').style.display = "none";
            document.getElementById('areaMonthDD').style.display = "none";

            //changing the charts visibility based on which is selected
            if (document.getElementById('chartSelect').value == 'chartPurchasePie') {
                document.getElementById('piePurchaseDD').style.display = "block";
            }
            else if (document.getElementById('chartSelect').value == "chartSpendCol") {
                document.getElementById('colSpendDD').style.display = "block";
                document.getElementById('colSpendDD').style.visibility = "visible";
            }
            else if (document.getElementById('chartSelect').value == "chartAvgCol") {
                document.getElementById('colAvgDD').style.display = "block";
                document.getElementById('colAvgDD').style.visibility = "visible";
            }
            else if (document.getElementById('chartSelect').value == "chartMonthAr") {
                document.getElementById('areaMonthDD').style.display = "block";
                document.getElementById('areaMonthDD').style.visibility = "visible";
            }
        }
    </script>
</head>


<div class="col-md-12">
    <h2 style="text-align: center">Global Statistics for @ViewBag.UserCount Users</h2>
    <hr />
    <div class="col-md-4">
        <h2 style="text-align: center">Total Purchases: @purchaseCount<br /></h2>
    </div>
    <div class="col-md-4">
        <h2 style="text-align: center">Total Spend: @totalSpend.ToString("C2", CultureInfo.CurrentCulture)<br /></h2>
    </div>
    <div class="col-md-4">
        <h2 style="text-align: center">Average Spend: @avgSpend.ToString("C2", CultureInfo.CurrentCulture)<br /></h2>
    </div>
    <br /><br /> <br /><br />
    <hr />
    <table class="table">
        <thead>
            <tr>
                <th><h3>Platform Stats</h3></th>
                <th width="130px" style="text-align: center" class="pc"><h4>PC</h4></th>
                <th width="130px" style="text-align: center" class="ps4"><h4>PS4</h4></th>
                <th width="130px" style="text-align: center" class="xbox"><h4>Xbox One</h4></th>
                <th width="130px" style="text-align: center" class="switch"><h4>Switch</h4></th>
                <th width="130px" style="text-align: center" class="mobile"><h4>Mobile</h4></th>
                <th width="130px" style="text-align: center" class="other"><h4>Other</h4></th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <th><h4>Purchases</h4></th>
                <td style="text-align: center" class="pc">@pcCount</td>
                <td style="text-align: center" class="ps4">@ps4Count</td>
                <td style="text-align: center" class="xbox">@xboxCount</td>
                <td style="text-align: center" class="switch">@switchCount</td>
                <td style="text-align: center" class="mobile">@mobileCount</td>
                <td style="text-align: center" class="other">@otherCount</td>
            </tr>
            <tr>
                <th><h4>Total Spend</h4></th>
                <td style="text-align: center" class="pc">@pcSpend.ToString("C2", CultureInfo.CurrentCulture)</td>
                <td style="text-align: center" class="ps4">@ps4Spend.ToString("C2", CultureInfo.CurrentCulture)</td>
                <td style="text-align: center" class="xbox">@xboxSpend.ToString("C2", CultureInfo.CurrentCulture)</td>
                <td style="text-align: center" class="switch">@switchSpend.ToString("C2", CultureInfo.CurrentCulture)</td>
                <td style="text-align: center" class="mobile">@mobileSpend.ToString("C2", CultureInfo.CurrentCulture)</td>
                <td style="text-align: center" class="other">@otherSpend.ToString("C2", CultureInfo.CurrentCulture)</td>
            </tr>
            <tr>
                <th><h4>Average Spend</h4></th>
                <td style="text-align: center" class="pc">@pcAvg.ToString("C2", CultureInfo.CurrentCulture)</td>
                <td style="text-align: center" class="ps4">@ps4Avg.ToString("C2", CultureInfo.CurrentCulture)</td>
                <td style="text-align: center" class="xbox">@xboxAvg.ToString("C2", CultureInfo.CurrentCulture)</td>
                <td style="text-align: center" class="switch">@switchAvg.ToString("C2", CultureInfo.CurrentCulture)</td>
                <td style="text-align: center" class="mobile">@mobileAvg.ToString("C2", CultureInfo.CurrentCulture)</td>
                <td style="text-align: center" class="other">@otherAvg.ToString("C2", CultureInfo.CurrentCulture)</td>
            </tr>
        </tbody>
    </table>
    <hr />
    <div class="col-md-4">
        <h3 style="text-align: center">Pre-Orders: @preorderCount<br /></h3>
    </div>
    <div class="col-md-4">
        <h3 style="text-align: center">Pre-Order Rate: @preorderPerc.ToString("N2")%<br /></h3>
    </div>
    <div class="col-md-4">
        <h3 style="text-align: center">Total Saved: @totalSaving.ToString("C2", CultureInfo.CurrentCulture)<br /></h3>
    </div>
    <br />

    <br /><br /> <br />
    <hr />
</div>



<div class="col-md-12">
    <h4>
        Slect a chart to view:
        <select id="chartSelect" onchange="chartPick()">
            <option value="chartPurchasePie">Total Number of Purchases Pie Chart</option>
            <option value="chartSpendCol">Total Money Spent Column Chart</option>
            <option value="chartAvgCol">Total Average Money Spent Column Chart</option>
            <option value="chartMonthAr">Total Games Purchased Per Month Area Chart</option>
        </select>
    </h4>
    <br />
    <br />
</div>

<div class="col-md-12" id="piePurchaseDD" style="display: block">
     <div id="piePurchaseTotal" style="height: 500px; width: 100%; align-content: center; position: absolute";></div>
</div>
<div class="col-md-12" id="colSpendDD" style="display: block; visibility: hidden">
    <div id="colSpendTotal" style="height: 500px; width: 70%; align-content: center; position: absolute; padding-left: 160px";></div>
</div>
<div class="col-md-12" id="colAvgDD" style="display: block; visibility: hidden">
    <div id="colAvgTotal" style="height: 500px; width: 70%; align-content: center; position: absolute; padding-left: 160px" ;></div>
</div>
<div class="col-md-12" id="areaMonthDD" style="display: block; visibility: hidden">
    <div id="areaMonthCount" style="height: 500px; width: 100%; align-content: center; position: absolute" ;></div>
</div>

<br />
